---
driver:
  name: docker

platforms:
  - name: postgres-${MY_MOLECULE_CONTAINER:-centos}
    image: ${MY_MOLECULE_IMAGE:-"geerlingguy/docker-centos8-ansible"}
    command: ${MY_MOLECULE_DOCKER_COMMAND:-""}
    privileged: True
    pre_build_image: True
    networks:
      - name: postgres
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    groups:
      - ${MY_MOLECULE_GROUP:-agent}

provisioner:
  name: ansible
  lint:
    name: ansible-lint
  env:
    ANSIBLE_REMOTE_TMP: /tmp/
    ANSIBLE_COLLECTIONS_PATHS: $HOME/.ansible/collections/ansible_collections/community/postgres
    ANSIBLE_ROLES_PATH: $HOME/.ansible/collections/ansible_collections/community/postgres/roles
  inventory:
    group_vars:
      all:
        dalibo_postgresql_instances:
          - name: "test2"
            port: 5438
            state: present
            replicated: true
            postgresql_version: 10
            pgdata_path: /var/lib/postgresql/10/test2
          - name: "test3"
            port: 5439
            state: present
            replicated: true
            manage_slaves: false
            postgresql_version: 12
            pgdata_path: /var/lib/postgresql/12/test3
            custom_config_options:
              - listen: "*"

scenario:
  test_sequence:
    - dependency
    - lint
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    # - idempotence
    - side_effect
    - verify
    - cleanup
    - destroy
verifier:
  name: testinfra
  lint:
    name: flake8
